# 변수
a=3
b=5
a,b=3,5 # 변수a에 값 3을 할당한다! 라고 표현한다.
print(a+b)

# swap
y, x=1, 5
temp=y
y=x
x=temp
print(y,x)

y,x=x,y
print(y,x)

########################################################
# boolean
a,b=0,-1
a,b=bool(a),bool(b)
print(a,b)                  # 0은 거짓 // 0이외의 숫자는 참

########################################################
# 자료형 (소수점)
a=3
print(type(a))

a=3.14
print(type(a))
print(round(a,1)) #소수 첫째자리에서 반올림
print(f'{a:.1f}') #f string 사용시 소숫점 출력 예시 입니다.

# 그러나!!  
# a의 값을 3.15 으로 바꾸면 우리의 의도 대로 작동이 안된다.

a=3.15
print(round(a,1)) # 3.2 가 아닌 3.1이 출력이 되는 것이 확인 될 것이다 !!

########################################################

# 파이썬이 소수점을 처리할떄 정확한 계산을 못한다. 

# 1. 이진수로 연산을 하는 컴퓨터가 소수를 표현하는데는 어려움이 생기는데
#    실수를 표현하기 위한 다양한 연구가 되었다. 그런데 파이썬에서는 
#    부동소수점 이라는 것을 이용해서 실수를 표현을 하는데
#    부동소수점으로 소수를 표현하면 정확한 값으로 표현되지 않고 근사값으로 값을 표현한다.
#    그래서 정확한 값이 실수값을 표현하지 못하는 경우가 있다.

a=1.2-1.1
print(a)
# 0.09999999999999987 출력됨


# 2. 파이썬에서는 round 함수로 반올림을 구한다고 했다.
#    하지만 소수를 정수값으로 표현할때
#    파이썬과 자바스크립트는 사사오입이 아니라 오사오입 이라고
#    소수점 첫째 자리가 5미 만은 내림 5 초과는 올림해버린다
#    그리고 
#    소수점 첫째 자리가 5일 경우에는 
#    앞자리가 홀수면 올림 짝수면 내림처리를 해버린다.

 #0.4  0.6 으로 다 실험해봐

print(round(0.5)) 
print(round(1.5))
print(round(2.5))
print(round(3.5))
print(round(4.5))
print(round(5.5))

########################################################

# 그러나 파이썬에서 오사오입 적용이 제대로 안되는 경우가 발생하기도 한다. 
# 오사오입이 부동소수점(소숫점을 정확한 값이 아니라 근사값으로 표현하는 파이썬 특성) 이라는것 때문에
# 오사오입이 우리의 의도대로 정확하게 되지 않는경우도 발생

print(round(0.15,1))
print(round(0.25,1))
print(round(0.35,1))
print(round(0.45,1))
print(round(0.55,1))


# (부동소수점으로 소수점을 근사값으로 표현해서)
# 다른 예를 더 보자면

print(round(0.5000))
print(round(1.5000))
print(round(2.5000))
print(round(3.5000))
print(round(4.5000))

# 0.5000 이라고 하지않고 0.5001 이라고 하면 반올림 잘 됨


# 그러면 도대체 결론은? 어떻게 우리가 평소에 사용하는 반올림을 구현할 수 있을까?
# 방법은 여러가지가 있지만 제가 자주 간단하게 사용하는 방식은
# 근사값으로 소수를 정확하게 표현해 주기 위해서 아주 작은수를 더한 다음에 반올림 처리를 한다.

# 1. 소수점 첫째자리 까지 정확한 소수점 출력을 하고자 한다면?

print(round(0.05,1))
print(round(0.15,1))
print(round(0.25,1))
print(round(0.35,1))
print(round(0.45,1))
print(round(0.55,1))


# 임이의 작은 소수를 (0.001) 더한 후 반올림 처리
print(round(0.05+0.001,1))
print(round(0.15+0.001,1))
print(round(0.25+0.001,1))
print(round(0.35+0.001,1))
print(round(0.45+0.001,1))
print(round(0.55+0.001,1))

print(round(0.56+1e-8,1))  # 0.00000001 을 더하기

# 2. 소수를 정수로 출력시
import math
print(math.floor(0.5+0.5))
print(math.floor(1.5+0.5))
print(math.floor(2.5+0.5))
print(math.floor(3.5+0.5))
print(math.floor(4.5+0.5))
print(math.floor(5.5+0.5))
